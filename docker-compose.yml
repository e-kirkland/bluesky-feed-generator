services:
  api:
    container_name: api
    build: .
    expose:
      - "8080"  # Only expose to other containers, not to host
    env_file: .env
    environment:
      - FLASK_APP=server.app
      - FLASK_RUN_PORT=8080
      - FLASK_RUN_HOST=0.0.0.0
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s 
    volumes:
      - .:/app
      - sqlite_data:/app/data:rw
    working_dir: /app
    user: "root"  # Temporary for debugging
    command: waitress-serve --host=0.0.0.0 --port=8080 server.app:app
    networks:
      - app_network

  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   ports:
  #     - "80:80"  # Expose nginx to the host on port 80
  #     - "443:443"  # Add HTTPS port
  #   volumes:
  #     - ./nginx/docker.conf:/etc/nginx/conf.d/default.conf:ro
  #     - /etc/letsencrypt/live/feed.markyt.app/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro  # SSL certificate
  #     - /etc/letsencrypt/live/feed.markyt.app/privkey.pem:/etc/nginx/ssl/privkey.pem:ro     # SSL private key
  #   depends_on:
  #     - api
  #   restart: always
  #   networks:
  #     - app_network

volumes:
  sqlite_data:
    driver: local

networks:
  app_network:
    driver: bridge
